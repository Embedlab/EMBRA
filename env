# Import file with local variables

source ./local_env

# Compressed Raspberry image file to use.
IMGXZ=$IMAGE

# Image parameters to be set

USERNAME="pi" # TODO: changing the default username needs some work, don't change
USERPASS="changeme123"

# By default includes current user's SSH key, can be any other key or multiple keys
# SSHKEYS="$(cat ~/.ssh/id_rsa.pub)"
# export SSHPASS=$USERPASS

# Add a static Ethernet network configuration
NETIF="eth0:1"
NETIP="$STATIC_ETH_IP"
NETMASK="$STATIC_ETH_NETMASK"
NETGW="$STATIC_ETH_GW"
NETDNS="1.1.1.1" # DNS server for target network, might be needed if not using DHCP
NETMETRIC="999"  # needs to be set higher than 100 for default DHCP route to work

# Add a static WLAN network configuration
SSID="$SSID"
PSK="$PSK"
WLAN_NETIF="wlan0"
WLAN_NETIP="$STATIC_WLAN_IP"
WLAN_NETMASK="$STATIC_WLAN_NETMASK"
WLAN_NETGW="$STATIC_WLAN_GW"
WLAN_NETDNS="1.1.1.1" # DNS server for target network, might be needed if not using DHCP
WLAN_NETMETRIC="100"  # needs to be set higher than 100 for default DHCP route to work

# Change hostname
RASPIHOST="rover-pi"

# Example packages to install
PKGS="i2c-tools spi-tools netcat-traditional"

# raspi-config commands, see: https://www.thedigitalpictureframe.com/cheat-sheet-raspberry-pi-configuration-settings-terminal-commands/
# or the official manual: https://www.raspberrypi.com/documentation/computers/configuration.html#raspi-config-cli
# You only need to provide the specific command and its arguments, eg. "do_boot_wait 0", without the "sudo raspi-config nonint" part.
RASPICMDS=()
RASPICMDS+=('do_change_timezone Europe/Warsaw')          # Set a timezone
# RASPICMDS+=('do_wifi_ssid_passphrase ssid passphrase') # Set WLAN settings

# Extra commands to run. This can do literally anything that can be ran on the actual HW before starting it.
EXTRACMDS=()
EXTRACMDS+=("touch /home/$USERNAME/.image_created_with_remoterover")

# Define which actions should be ran
RUN_PREP=1      # Unpack and resize raspberry image
RUN_USERSETUP=1 # Set user password (USERNAME/USERPASS)
RUN_I2C=1       # Enable I2C
RUN_SPI=1       # Enable SPI
RUN_SERIAL=1    # Enable UART
RUN_ENABLESSH=1 # Enable SSH by default
RUN_SSHKEYS=1   # Copy SSKEYS to authorized_keys
RUN_NETWORK=1   # Set a static IP
RUN_ETH=1       # Set up ethernet with a static IP
RUN_WLAN=1      # Set up Wi-Fi with a static IP
RUN_WLAN_DHCP=0 # Use DHCP for WLAN
RUN_HOSTNAME=1  # Change hostname
RUN_UPDATE=1    # Update package index, takes some time
RUN_UPGRADE=0   # Update the OS, takes a long time
RUN_PKGS=1      # Install packages listed in PKGS, takes some time
RUN_STM32=1     # Enable STM32 gdb server
RUN_CAMERA=1    # Enable remote camera
RUN_CURRENT_MONITOR=1   # Enable Power Monitor HAT
RUN_RASPICONF=1 # Run raspi-config commands specified in RASPICMDS array
RUN_RELAY=1     # Enable Waveshare RPi Relay Board
RUN_EXTRA=1     # Run extra commands specified in EXTRACMDS array
RUN_SHRINK=1    # Shrink image back for faster writing to SD
RUN_CLEANUP=1   # Clean temporary files - kernel, dtb, mountpoints
